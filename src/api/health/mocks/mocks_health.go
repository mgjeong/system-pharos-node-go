// Automatically generated by MockGen. DO NOT EDIT!
// Source: health.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
)

// Mock of Command interface
type MockCommand struct {
	ctrl     *gomock.Controller
	recorder *_MockCommandRecorder
}

// Recorder for MockCommand (not exported)
type _MockCommandRecorder struct {
	mock *MockCommand
}

func NewMockCommand(ctrl *gomock.Controller) *MockCommand {
	mock := &MockCommand{ctrl: ctrl}
	mock.recorder = &_MockCommandRecorder{mock}
	return mock
}

func (_m *MockCommand) EXPECT() *_MockCommandRecorder {
	return _m.recorder
}

func (_m *MockCommand) Handle(w http.ResponseWriter, req *http.Request) {
	_m.ctrl.Call(_m, "Handle", w, req)
}

func (_mr *_MockCommandRecorder) Handle(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Handle", arg0, arg1)
}

// Mock of apiInnerCommand interface
type MockapiInnerCommand struct {
	ctrl     *gomock.Controller
	recorder *_MockapiInnerCommandRecorder
}

// Recorder for MockapiInnerCommand (not exported)
type _MockapiInnerCommandRecorder struct {
	mock *MockapiInnerCommand
}

func NewMockapiInnerCommand(ctrl *gomock.Controller) *MockapiInnerCommand {
	mock := &MockapiInnerCommand{ctrl: ctrl}
	mock.recorder = &_MockapiInnerCommandRecorder{mock}
	return mock
}

func (_m *MockapiInnerCommand) EXPECT() *_MockapiInnerCommandRecorder {
	return _m.recorder
}

func (_m *MockapiInnerCommand) unregister(w http.ResponseWriter, req *http.Request) {
	_m.ctrl.Call(_m, "unregister", w, req)
}

func (_mr *_MockapiInnerCommandRecorder) unregister(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "unregister", arg0, arg1)
}
